/*Your Code Here*/
/* PLEASE DO NOT REMOVE MY COMMENTS.  THEY HELP US HELP YOU DEBUG. */

/* Step 1: Write selector/rule property to add an underline when
links in the navigation are in the hover or focus state.*/

nav a:hover, nav a:focus {
  text-decoration: underline;
}

/* Step 2a: Write selector/rule property to position the default position for the skip class element*/

.skip a{
     position: absolute;
     top: -40px;
}

/* Step 2b: Write selector/rule property to position the skip class element when it is in focus*/


.skip a:focus {
     position: absolute;
     top: 20px;
}

/* Step 3: Write selector/rule property to style all elements when in focus*/

*:focus {
     border: solid 2px black;
}

/* Step 4: Write selector/rule property to style the container */

.container {
     display: grid;
     grid-template-columns: 1fr 5fr 1fr;
     row-gap: 15px;
}

/* Step 5: Write selector/rule property to add the background image to the 
first div in the grid  and place it in the grid. */

.container>*:first-child {
     background-image: url('../images/header.jpg');
     background-size: cover;
     background-position: center;
     background-repeat: no-repeat; 
     background-attachment: fixed; 
     grid-column: span 3;
}
 

/* Steps 6 and 7: Write the selector/rule properties to add place the next elements in the next
 four rows in the grid. */

      /*This will be a lot of rules.... but be strategic and combine seletors*/

.about, .method, .clients, .contact {
     grid-column: 2 / span 1;
     align-self: center;
     justify-self: center;
     text-align: center;
}

.about-image, .method-image, .clients-image, .contact-image {
     grid-column: 2 / span 1;
     max-height: 600px;
     overflow: hidden;
     display: grid;
     align-self: center;
     justify-self: center;
     text-align: center;
}

.about, .about-image {
     grid-row: 2;
}

.method, .method-image {
     grid-row: 3;
}

.clients, .clients-image {
     grid-row: 4;
}

.contact, .contact-image {
     grid-row: 5;
}

 /* Step 8: Write the selector/rule property to style the .text-block class. */

.text-block {
     display: grid;
     place-items: center; 
     text-align: center;
     max-width: 70%;
}
 

/* Add your media query here */

@media (max-width: 700px) {
     .container {
         grid-template-columns: 1fr; 
     }
 
     .about, .method, .clients, .contact {
         grid-column: 1 ; 
     }
 
     .about-image, .method-image, .clients-image, .contact-image {
         grid-column: 1 ; 
         max-width: 100%; 
     }
 }
 
  /*
  The following specifications are for the desktop view (windows of 800px or greater)

The .about, .clients, .method-image, .contact-image:
Begin in the third column and span two columns


The .method, .contact, .about-image, and .clients-image:
Begin in the second column and span two columns.



 Step 9: Write the selector/rule property to style the nav element */

 @media (min-width: 800px) {
     nav ul {
          text-align: right;
     }
     .container {
          display: grid;
          grid-template-columns: 50px auto 500px auto 50px;
          row-gap: 15px;
     }
     .container>*:first-child {
          grid-column: span 5;
     }
     .about, .clients, .method-image, .contact-image {
          grid-column: 3 / span 2;
     }
     .method, .contact, .about-image, .clients-image {
          grid-column: 2 / span 2;
     }
     .text-block {
          max-height: 250px;
          overflow: scroll;
     }
 }


  /* Step 10: Write the selector/rule property to update the .container class */


  /* Steps 11 and 12: Update the grid-column property of the grid's children (where-needed)*/



 /* Step 13:Write the selector/rule property to update the .text-block class */